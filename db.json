{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/cactus-light/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/justified-gallery/justifiedGallery.min.css","path":"lib/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/justified-gallery/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/styles.css","path":"lib/meslo-LG/styles.css","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-light/source/images/theme overview.psd","path":"images/theme overview.psd","modified":0,"renderable":1}],"Cache":[{"_id":"source/about.md","hash":"f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0","modified":1502996994000},{"_id":"themes/cactus-light/README.md","hash":"da60bf6d6f800de621ea3a2600f4a850ddaff7d2","modified":1502918371000},{"_id":"themes/cactus-light/LICENSE","hash":"2f1530f30fbec68407daa54391553c3d5ff71f6a","modified":1502918371000},{"_id":"themes/cactus-light/_config.yml","hash":"397f08a98075a891aabc96194e096044f0fee0df","modified":1502918371000},{"_id":"source/_posts/from-zero-to-cd-aws-k8s.md","hash":"5f8433e8682bc467dd47a8ee4359f543b83d2877","modified":1502996574000},{"_id":"themes/cactus-light/layout/archive.ejs","hash":"ab9798bf534485a4fed4d3089011421858afdd26","modified":1502918371000},{"_id":"themes/cactus-light/layout/layout.ejs","hash":"8484532ad7c4da22f46fc1394bb2fd9ded34be1f","modified":1502918371000},{"_id":"themes/cactus-light/layout/index.ejs","hash":"53196279a25035da55902f4b8f0ebdf7871d39d1","modified":1502918371000},{"_id":"themes/cactus-light/layout/page.ejs","hash":"b6b7b1e6dc856a0e62f35da0151f67ba41143e04","modified":1502918371000},{"_id":"themes/cactus-light/layout/post.ejs","hash":"2731e597b5d1714a6f5a775c432e99785f02a3e3","modified":1502918371000},{"_id":"themes/cactus-light/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1502918371000},{"_id":"themes/cactus-light/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/comments.ejs","hash":"853a4500da515ef3facc51a055886eaf8efd080d","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/footer.ejs","hash":"7f6b3f126a58e6734b658ab57bc6b41822bc9342","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/head.ejs","hash":"7782e6b1ce72fcf121f0017d383e2fb87e72c539","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/header.ejs","hash":"889fe54bbfd1fb3357e8c0614d57a437a72f782a","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/pagination.ejs","hash":"ca660c59aec56daa4a7b41715b97434d4a24c37e","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/scripts.ejs","hash":"6cffa3adb2f5b93a47f29549ac589c8bce8c223e","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/styles.ejs","hash":"e62b799d8ac369d1f1b36bd2649ecc34aec3384c","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_mixins.styl","hash":"c921ceb620deedddd38c9cec28190995e8764bab","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_extend.styl","hash":"faca25132d55e8989d1c1d638e55d1e97de3c561","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_util.styl","hash":"f8e286a21c7ec3e771d5ddeb2909ac92390af9bd","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_variables.styl","hash":"35d671e97f68b258aeb7f19d101a0850c6c20f62","modified":1502918371000},{"_id":"themes/cactus-light/source/css/style.styl","hash":"ada8a252ea063c5b7ec9e7848e993001ccc0631c","modified":1502918371000},{"_id":"themes/cactus-light/source/images/apple-touch-icon.png","hash":"119559ffcb71bed428e88e28401a29aebfed674a","modified":1502918371000},{"_id":"themes/cactus-light/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1502918371000},{"_id":"themes/cactus-light/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1502918371000},{"_id":"themes/cactus-light/source/images/logo.png","hash":"a25db3e5edb7be2182f4bcae98afb0dd7d6e5353","modified":1502918371000},{"_id":"themes/cactus-light/source/js/main.js","hash":"2703a7cb4fc7056d13215b9fde675da426b9cdc4","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/post/actions_desktop.ejs","hash":"2319dea76f205c27dd59c994921f66350df8027a","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/post/actions_mobile.ejs","hash":"e7638a83e5aaa4bf5b24440ca76fec8eb563bed7","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/post/date.ejs","hash":"12a4a7ba6334e3e5c03d9a9601d7779a27c2e082","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/post/share.ejs","hash":"25a3406f97e976ec13239f0d3f32f9e512511f50","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1502918371000},{"_id":"themes/cactus-light/layout/_partial/post/tag.ejs","hash":"bfab03ef986d35ccad583f2d2b575db4a8d2789e","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/kimbie.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/monokai.styl","hash":"bd4b20bdbb3a62972f5c9e52f1f794090b8ff7f9","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/paraiso.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/article.styl","hash":"b90c7eebe9b39110aac089d65155e937dc1836e9","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/archive.styl","hash":"18fa7f84a9783c5fb56c9f450ea93bd88408e682","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/comments.styl","hash":"11fb41241a13971d23fc3f7e6d60315c7f248396","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/header.styl","hash":"63707d9103a283147ca222fd6f8ff9bffbffe427","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/footer.styl","hash":"b7570de60eaf9aa6b0192bf9c71b9172ff11bfbc","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/index.styl","hash":"cf43702450ea1e5617541501886982a394cff8ec","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/pagination.styl","hash":"f483e0b4e8aefaa81f5e1e5e8ab7c54f70557f75","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/styles.css","hash":"eb88d0b9f1bbef99070e9627e2c96d892036bf7e","modified":1502918372000},{"_id":"themes/cactus-light/source/lib/jquery/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/post/actions_mobile.styl","hash":"dce6466e2ab708854c9e15173bfc19e5715d4303","modified":1502918371000},{"_id":"themes/cactus-light/source/css/_partial/post/actions_desktop.styl","hash":"e05dbc1022cfe14828dad8499c7a8a6b93f71598","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1502918372000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1502918371000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1502918372000},{"_id":"themes/cactus-light/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1502918372000},{"_id":"themes/cactus-light/source/images/theme overview.psd","hash":"8dc11d9d289c247423911e962c4eb3a556dc67d1","modified":1502918371000},{"_id":"public/2017/08/15/from-zero-to-cd-aws-k8s/index.html","hash":"edff7c0a99d246a830fb117264f3de53cc25cd3b","modified":1502997059729},{"_id":"public/archives/index.html","hash":"003a1ef198a7eab530e7f12238964f44d65d9efa","modified":1502997059822},{"_id":"public/archives/2017/08/index.html","hash":"b094f1597e5c834fe419092324bf46a69ef66658","modified":1502997059859},{"_id":"public/archives/2017/index.html","hash":"8b037510d73755716109a850567626a72d8c2f31","modified":1502997059859},{"_id":"public/index.html","hash":"4904b5110e2d1d01ea1c68deb004f6c5c5a2073d","modified":1502997059865},{"_id":"public/tags/aws-kubernetes-circleci-Continuous-Delivery/index.html","hash":"bd8db85584257b9debda6bf7d6fd8527bc7e93e5","modified":1502997059865},{"_id":"public/about.html","hash":"634ce6abfb20817f9534b29b0733a2caf2287b30","modified":1502997059866},{"_id":"public/images/apple-touch-icon.png","hash":"119559ffcb71bed428e88e28401a29aebfed674a","modified":1502997059866},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1502997059866},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1502997059866},{"_id":"public/images/logo.png","hash":"a25db3e5edb7be2182f4bcae98afb0dd7d6e5353","modified":1502997059867},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1502997060255},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1502997060256},{"_id":"public/js/main.js","hash":"2703a7cb4fc7056d13215b9fde675da426b9cdc4","modified":1502997060263},{"_id":"public/lib/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1502997060263},{"_id":"public/lib/meslo-LG/styles.css","hash":"eb88d0b9f1bbef99070e9627e2c96d892036bf7e","modified":1502997060263},{"_id":"public/css/style.css","hash":"7e8363a9215524c2b560ffef69b228d4d6e929b3","modified":1502997060263},{"_id":"public/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1502997060263},{"_id":"public/lib/jquery/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1502997060263},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1502997060264},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1502997060264},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1502997060264},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1502997060264},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1502997060264},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1502997060278},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1502997060284},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1502997060284},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1502997060285},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1502997060287},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1502997060287},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1502997060287},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1502997060287},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1502997060288},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1502997060288},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1502997060289},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1502997060289},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1502997060290},{"_id":"public/images/theme overview.psd","hash":"8dc11d9d289c247423911e962c4eb3a556dc67d1","modified":1502997060307}],"Category":[],"Data":[],"Page":[{"_content":"Hello","source":"about.md","raw":"Hello","date":"2017-08-17T19:09:54.000Z","updated":"2017-08-17T19:09:54.000Z","path":"about.html","title":"","comments":1,"layout":"page","_id":"cj6gtn55o00001zstuxy3w4hk","content":"<p>Hello</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hello</p>\n"}],"Post":[{"title":"From Zero to Continuous Delivery on Kubernetes on AWS in 2 hours","date":"2017-08-15T19:44:14.000Z","_content":"\nFor a developer, Kubernetes is a dream target platform. Commands are simple and powerful, making deployment tasks easy and transparent. This is especially valuable in the microservices world, where deployment is something developers have to work with on a daily basis and understand in detail.\nSetting up a Kubernetes cluster is a different story, or at least used to be. Kubernetes runs on many platforms, but setting it up is not equally simple. Until recently, any other platform than Google Container Engine required too much operational effort to set up and maintain.\n\nSome time ago I had set up a small cluster on Google Container Engine  (GKE) and a delivery pipeline with CircleCI. \nThis weekend, I decided to check out how difficult it would be to move this to AWS, and I was surprised how smoothly it went. Starting from a scratch, it should be possible to set up the cluster and a delivery pipeline to it within a few hours. This blog documents the process in big lines.\n\n## The Goal\n\nStarting with any project that produces a docker image, we will create the kubernetes cluster and set up a delivery pipeline that builds and deploys it the cluster on every change.\n\n## Kubernetes on AWS\nFirst, create the cluster. [Kops](https://github.com/kubernetes/kops) has made that really simple.\nChoosing the simplest DNS option, a fully operation cluster can be set up with just\nthe following commands:\n\n      aws s3api create-bucket --bucket kolov-k8s1-state-store --region us-east-1\n      aws s3api put-bucket-versioning --bucket kolov-k8s1-state-store --versioning-configuration Status=Enabled\n      export KOPS_STATE_STORE=s3://kolov-k8s1-state-store\n      kops create cluster --zones eu-central-1a  kolov-k8s1.k8s.local\n\nThese commands are more of an example to show how simple it is to create a cluster with `kops`, for the details\nfollow the official instructions. `kops` sets up the cluster and configures `kubectl` with credentials to access it.\n\n## Container Registry\nAs we are going to build an deploy containers, we need a container registry. If you already have one somewhere - \ngreat. Setting up one on AWS is pretty straightforward - go to `EC2 Container Service` and create a registry. We need credentials for the build process to push images to it - create a IAM user with `AmazonEC2ContainerRegistryPowerUser` policy. Note its Access Key ID and Secret Key for later use.\n\n## The project\n\nWe start with a project that already has a `Dockerfile`, but next to it we need two more files: `k8s-deployment.yml` to create a [kubernetes deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/), and `k8s-service.yml` for the [service](https://kubernetes.io/docs/concepts/services-networking/service/). \n\nA typical `k8s-deployment.yml`. It contains a few placeholders:\n\n    apiVersion: extensions/v1beta1\n    kind: Deployment\n    metadata:\n      name: myproject\n    spec:\n      replicas: 1\n      template:\n        metadata:\n          labels:\n            app:myproject\n        spec:\n          containers:\n          - name: myproject\n            image: %REGISTRY%/myproject:%VERSION%\n            ports:\n            - containerPort: 80\n\nand `k8s-service.yml`:\n\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: myproject\n    spec:\n      type: NodePort\n      ports:\n        - name: myproject\n          port: 80\n          targetPort: 80\n      selector:\n        app: myproject\n\n## CircleCI\n\nThere are  many choices for a CI server, and CircleCI is quite a good one.  They offer a free 1500 hours/month plan - this is 50 building hours a day, isn't that insane? Go to [CircleCI](https://circleci.com/) and create an account if you don't have one already. Your project needs a file named `circleci.yml` that contains the build definition. An example of a Node project\n\n    machine:\n      node:\n        version: 6.11.2\n      services:\n        - docker\n      environment:\n        BUILD_TARGET_DIR: dist\n        APP_NAME: myproject\n\n    dependencies:\n      cache_directories:\n        - node_modules\n        - code/server/node_modules\n        - code/client/node_modules\n        - code/client/vendor\n      override:\n        - npm install\n        - npm install -g bower gulp\n        - bower install\n        - gulp build\n\n\n    deployment:\n      prod:\n        branch: master\n        commands:\n          - cp docker/nginx/nginx.conf dist\n          - cp docker/nginx/Dockerfile dist\n          - wget https://raw.githubusercontent.com/kolov/k8s-stuff/master/circleci/deploy-aws.sh\n          - chmod +x deploy-aws.sh\n          - ./deploy-aws.sh\n\nAfter the regular build, this delegates to a script where the build of the meat is: `deploy-aws.sh`.\n\n## The build script\n\nWe are at the last piece of the puzzle. The script has to authenticate to both the container registry and the kubernetes cluster.\nFor the registry, define `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`. that is enough to execute `aws ecr get-login`, which outputs a docker login command. Two other AWS parameters that are needed are `AWS_ACCOUNT_ID` and `AWS_DEFAULT_REGION`.\n\nFor the kubernetes cluster, there must be a cleaner way, but I went brute force. On the local machine: `cat ~/.kube/config | base64 ` and store the output as `KUBECONFIGDATA` in circleci.\n\nWith all this params, this is the script:\n\n\n\t\tset +x\n\t\tcurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\n\t\tchmod +x kubectl\n\t\tmkdir ~/.kube\n\t\techo $KUBECONFIGDATA | base64 --decode --ignore-garbage > ~/.kube/config\n\t\teval $(aws ecr get-login)\n\t\tdocker build --rm=false -t $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/$APP_NAME:$CIRCLE_SHA1 $BUILD_TARGET_DIR\n\t\tREGISTRY=$AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com\n\t\tdocker push $REGISTRY/$APP_NAME:$CIRCLE_SHA1\n\t\tsed -e s/%VERSION%/$CIRCLE_SHA1/g -e s/%APP_NAME%/$APP_NAME/g -e s/%REGISTRY%/$REGISTRY/g \\\n        k8s-deployment.yml > k8s-deployment-latest.yml\n\t\t./kubectl apply -f k8s-deployment-latest.yml\n\t\t./kubectl apply -f k8s-service.yml\n","source":"_posts/from-zero-to-cd-aws-k8s.md","raw":"---\ntitle: From Zero to Continuous Delivery on Kubernetes on AWS in 2 hours\ndate: 2017-08-15 21:44:14\ntags: aws, kubernetes, circleci, Continuous Delivery\n---\n\nFor a developer, Kubernetes is a dream target platform. Commands are simple and powerful, making deployment tasks easy and transparent. This is especially valuable in the microservices world, where deployment is something developers have to work with on a daily basis and understand in detail.\nSetting up a Kubernetes cluster is a different story, or at least used to be. Kubernetes runs on many platforms, but setting it up is not equally simple. Until recently, any other platform than Google Container Engine required too much operational effort to set up and maintain.\n\nSome time ago I had set up a small cluster on Google Container Engine  (GKE) and a delivery pipeline with CircleCI. \nThis weekend, I decided to check out how difficult it would be to move this to AWS, and I was surprised how smoothly it went. Starting from a scratch, it should be possible to set up the cluster and a delivery pipeline to it within a few hours. This blog documents the process in big lines.\n\n## The Goal\n\nStarting with any project that produces a docker image, we will create the kubernetes cluster and set up a delivery pipeline that builds and deploys it the cluster on every change.\n\n## Kubernetes on AWS\nFirst, create the cluster. [Kops](https://github.com/kubernetes/kops) has made that really simple.\nChoosing the simplest DNS option, a fully operation cluster can be set up with just\nthe following commands:\n\n      aws s3api create-bucket --bucket kolov-k8s1-state-store --region us-east-1\n      aws s3api put-bucket-versioning --bucket kolov-k8s1-state-store --versioning-configuration Status=Enabled\n      export KOPS_STATE_STORE=s3://kolov-k8s1-state-store\n      kops create cluster --zones eu-central-1a  kolov-k8s1.k8s.local\n\nThese commands are more of an example to show how simple it is to create a cluster with `kops`, for the details\nfollow the official instructions. `kops` sets up the cluster and configures `kubectl` with credentials to access it.\n\n## Container Registry\nAs we are going to build an deploy containers, we need a container registry. If you already have one somewhere - \ngreat. Setting up one on AWS is pretty straightforward - go to `EC2 Container Service` and create a registry. We need credentials for the build process to push images to it - create a IAM user with `AmazonEC2ContainerRegistryPowerUser` policy. Note its Access Key ID and Secret Key for later use.\n\n## The project\n\nWe start with a project that already has a `Dockerfile`, but next to it we need two more files: `k8s-deployment.yml` to create a [kubernetes deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/), and `k8s-service.yml` for the [service](https://kubernetes.io/docs/concepts/services-networking/service/). \n\nA typical `k8s-deployment.yml`. It contains a few placeholders:\n\n    apiVersion: extensions/v1beta1\n    kind: Deployment\n    metadata:\n      name: myproject\n    spec:\n      replicas: 1\n      template:\n        metadata:\n          labels:\n            app:myproject\n        spec:\n          containers:\n          - name: myproject\n            image: %REGISTRY%/myproject:%VERSION%\n            ports:\n            - containerPort: 80\n\nand `k8s-service.yml`:\n\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: myproject\n    spec:\n      type: NodePort\n      ports:\n        - name: myproject\n          port: 80\n          targetPort: 80\n      selector:\n        app: myproject\n\n## CircleCI\n\nThere are  many choices for a CI server, and CircleCI is quite a good one.  They offer a free 1500 hours/month plan - this is 50 building hours a day, isn't that insane? Go to [CircleCI](https://circleci.com/) and create an account if you don't have one already. Your project needs a file named `circleci.yml` that contains the build definition. An example of a Node project\n\n    machine:\n      node:\n        version: 6.11.2\n      services:\n        - docker\n      environment:\n        BUILD_TARGET_DIR: dist\n        APP_NAME: myproject\n\n    dependencies:\n      cache_directories:\n        - node_modules\n        - code/server/node_modules\n        - code/client/node_modules\n        - code/client/vendor\n      override:\n        - npm install\n        - npm install -g bower gulp\n        - bower install\n        - gulp build\n\n\n    deployment:\n      prod:\n        branch: master\n        commands:\n          - cp docker/nginx/nginx.conf dist\n          - cp docker/nginx/Dockerfile dist\n          - wget https://raw.githubusercontent.com/kolov/k8s-stuff/master/circleci/deploy-aws.sh\n          - chmod +x deploy-aws.sh\n          - ./deploy-aws.sh\n\nAfter the regular build, this delegates to a script where the build of the meat is: `deploy-aws.sh`.\n\n## The build script\n\nWe are at the last piece of the puzzle. The script has to authenticate to both the container registry and the kubernetes cluster.\nFor the registry, define `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`. that is enough to execute `aws ecr get-login`, which outputs a docker login command. Two other AWS parameters that are needed are `AWS_ACCOUNT_ID` and `AWS_DEFAULT_REGION`.\n\nFor the kubernetes cluster, there must be a cleaner way, but I went brute force. On the local machine: `cat ~/.kube/config | base64 ` and store the output as `KUBECONFIGDATA` in circleci.\n\nWith all this params, this is the script:\n\n\n\t\tset +x\n\t\tcurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\n\t\tchmod +x kubectl\n\t\tmkdir ~/.kube\n\t\techo $KUBECONFIGDATA | base64 --decode --ignore-garbage > ~/.kube/config\n\t\teval $(aws ecr get-login)\n\t\tdocker build --rm=false -t $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/$APP_NAME:$CIRCLE_SHA1 $BUILD_TARGET_DIR\n\t\tREGISTRY=$AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com\n\t\tdocker push $REGISTRY/$APP_NAME:$CIRCLE_SHA1\n\t\tsed -e s/%VERSION%/$CIRCLE_SHA1/g -e s/%APP_NAME%/$APP_NAME/g -e s/%REGISTRY%/$REGISTRY/g \\\n        k8s-deployment.yml > k8s-deployment-latest.yml\n\t\t./kubectl apply -f k8s-deployment-latest.yml\n\t\t./kubectl apply -f k8s-service.yml\n","slug":"from-zero-to-cd-aws-k8s","published":1,"updated":"2017-08-17T19:02:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6gtn56h00011zstj18fy1ac","content":"<p>For a developer, Kubernetes is a dream target platform. Commands are simple and powerful, making deployment tasks easy and transparent. This is especially valuable in the microservices world, where deployment is something developers have to work with on a daily basis and understand in detail.<br>Setting up a Kubernetes cluster is a different story, or at least used to be. Kubernetes runs on many platforms, but setting it up is not equally simple. Until recently, any other platform than Google Container Engine required too much operational effort to set up and maintain.</p>\n<p>Some time ago I had set up a small cluster on Google Container Engine  (GKE) and a delivery pipeline with CircleCI.<br>This weekend, I decided to check out how difficult it would be to move this to AWS, and I was surprised how smoothly it went. Starting from a scratch, it should be possible to set up the cluster and a delivery pipeline to it within a few hours. This blog documents the process in big lines.</p>\n<h2 id=\"The-Goal\"><a href=\"#The-Goal\" class=\"headerlink\" title=\"The Goal\"></a>The Goal</h2><p>Starting with any project that produces a docker image, we will create the kubernetes cluster and set up a delivery pipeline that builds and deploys it the cluster on every change.</p>\n<h2 id=\"Kubernetes-on-AWS\"><a href=\"#Kubernetes-on-AWS\" class=\"headerlink\" title=\"Kubernetes on AWS\"></a>Kubernetes on AWS</h2><p>First, create the cluster. <a href=\"https://github.com/kubernetes/kops\" target=\"_blank\" rel=\"external\">Kops</a> has made that really simple.<br>Choosing the simplest DNS option, a fully operation cluster can be set up with just<br>the following commands:</p>\n<pre><code>aws s3api create-bucket --bucket kolov-k8s1-state-store --region us-east-1\naws s3api put-bucket-versioning --bucket kolov-k8s1-state-store --versioning-configuration Status=Enabled\nexport KOPS_STATE_STORE=s3://kolov-k8s1-state-store\nkops create cluster --zones eu-central-1a  kolov-k8s1.k8s.local\n</code></pre><p>These commands are more of an example to show how simple it is to create a cluster with <code>kops</code>, for the details<br>follow the official instructions. <code>kops</code> sets up the cluster and configures <code>kubectl</code> with credentials to access it.</p>\n<h2 id=\"Container-Registry\"><a href=\"#Container-Registry\" class=\"headerlink\" title=\"Container Registry\"></a>Container Registry</h2><p>As we are going to build an deploy containers, we need a container registry. If you already have one somewhere -<br>great. Setting up one on AWS is pretty straightforward - go to <code>EC2 Container Service</code> and create a registry. We need credentials for the build process to push images to it - create a IAM user with <code>AmazonEC2ContainerRegistryPowerUser</code> policy. Note its Access Key ID and Secret Key for later use.</p>\n<h2 id=\"The-project\"><a href=\"#The-project\" class=\"headerlink\" title=\"The project\"></a>The project</h2><p>We start with a project that already has a <code>Dockerfile</code>, but next to it we need two more files: <code>k8s-deployment.yml</code> to create a <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\" target=\"_blank\" rel=\"external\">kubernetes deployment</a>, and <code>k8s-service.yml</code> for the <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/\" target=\"_blank\" rel=\"external\">service</a>. </p>\n<p>A typical <code>k8s-deployment.yml</code>. It contains a few placeholders:</p>\n<pre><code>apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: myproject\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app:myproject\n    spec:\n      containers:\n      - name: myproject\n        image: %REGISTRY%/myproject:%VERSION%\n        ports:\n        - containerPort: 80\n</code></pre><p>and <code>k8s-service.yml</code>:</p>\n<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: myproject\nspec:\n  type: NodePort\n  ports:\n    - name: myproject\n      port: 80\n      targetPort: 80\n  selector:\n    app: myproject\n</code></pre><h2 id=\"CircleCI\"><a href=\"#CircleCI\" class=\"headerlink\" title=\"CircleCI\"></a>CircleCI</h2><p>There are  many choices for a CI server, and CircleCI is quite a good one.  They offer a free 1500 hours/month plan - this is 50 building hours a day, isn’t that insane? Go to <a href=\"https://circleci.com/\" target=\"_blank\" rel=\"external\">CircleCI</a> and create an account if you don’t have one already. Your project needs a file named <code>circleci.yml</code> that contains the build definition. An example of a Node project</p>\n<pre><code>machine:\n  node:\n    version: 6.11.2\n  services:\n    - docker\n  environment:\n    BUILD_TARGET_DIR: dist\n    APP_NAME: myproject\n\ndependencies:\n  cache_directories:\n    - node_modules\n    - code/server/node_modules\n    - code/client/node_modules\n    - code/client/vendor\n  override:\n    - npm install\n    - npm install -g bower gulp\n    - bower install\n    - gulp build\n\n\ndeployment:\n  prod:\n    branch: master\n    commands:\n      - cp docker/nginx/nginx.conf dist\n      - cp docker/nginx/Dockerfile dist\n      - wget https://raw.githubusercontent.com/kolov/k8s-stuff/master/circleci/deploy-aws.sh\n      - chmod +x deploy-aws.sh\n      - ./deploy-aws.sh\n</code></pre><p>After the regular build, this delegates to a script where the build of the meat is: <code>deploy-aws.sh</code>.</p>\n<h2 id=\"The-build-script\"><a href=\"#The-build-script\" class=\"headerlink\" title=\"The build script\"></a>The build script</h2><p>We are at the last piece of the puzzle. The script has to authenticate to both the container registry and the kubernetes cluster.<br>For the registry, define <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code>. that is enough to execute <code>aws ecr get-login</code>, which outputs a docker login command. Two other AWS parameters that are needed are <code>AWS_ACCOUNT_ID</code> and <code>AWS_DEFAULT_REGION</code>.</p>\n<p>For the kubernetes cluster, there must be a cleaner way, but I went brute force. On the local machine: <code>cat ~/.kube/config | base64</code> and store the output as <code>KUBECONFIGDATA</code> in circleci.</p>\n<p>With all this params, this is the script:</p>\n<pre><code>set +x\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nchmod +x kubectl\nmkdir ~/.kube\necho $KUBECONFIGDATA | base64 --decode --ignore-garbage &gt; ~/.kube/config\neval $(aws ecr get-login)\ndocker build --rm=false -t $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/$APP_NAME:$CIRCLE_SHA1 $BUILD_TARGET_DIR\nREGISTRY=$AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com\ndocker push $REGISTRY/$APP_NAME:$CIRCLE_SHA1\nsed -e s/%VERSION%/$CIRCLE_SHA1/g -e s/%APP_NAME%/$APP_NAME/g -e s/%REGISTRY%/$REGISTRY/g \\\nk8s-deployment.yml &gt; k8s-deployment-latest.yml\n./kubectl apply -f k8s-deployment-latest.yml\n./kubectl apply -f k8s-service.yml\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>For a developer, Kubernetes is a dream target platform. Commands are simple and powerful, making deployment tasks easy and transparent. This is especially valuable in the microservices world, where deployment is something developers have to work with on a daily basis and understand in detail.<br>Setting up a Kubernetes cluster is a different story, or at least used to be. Kubernetes runs on many platforms, but setting it up is not equally simple. Until recently, any other platform than Google Container Engine required too much operational effort to set up and maintain.</p>\n<p>Some time ago I had set up a small cluster on Google Container Engine  (GKE) and a delivery pipeline with CircleCI.<br>This weekend, I decided to check out how difficult it would be to move this to AWS, and I was surprised how smoothly it went. Starting from a scratch, it should be possible to set up the cluster and a delivery pipeline to it within a few hours. This blog documents the process in big lines.</p>\n<h2 id=\"The-Goal\"><a href=\"#The-Goal\" class=\"headerlink\" title=\"The Goal\"></a>The Goal</h2><p>Starting with any project that produces a docker image, we will create the kubernetes cluster and set up a delivery pipeline that builds and deploys it the cluster on every change.</p>\n<h2 id=\"Kubernetes-on-AWS\"><a href=\"#Kubernetes-on-AWS\" class=\"headerlink\" title=\"Kubernetes on AWS\"></a>Kubernetes on AWS</h2><p>First, create the cluster. <a href=\"https://github.com/kubernetes/kops\" target=\"_blank\" rel=\"external\">Kops</a> has made that really simple.<br>Choosing the simplest DNS option, a fully operation cluster can be set up with just<br>the following commands:</p>\n<pre><code>aws s3api create-bucket --bucket kolov-k8s1-state-store --region us-east-1\naws s3api put-bucket-versioning --bucket kolov-k8s1-state-store --versioning-configuration Status=Enabled\nexport KOPS_STATE_STORE=s3://kolov-k8s1-state-store\nkops create cluster --zones eu-central-1a  kolov-k8s1.k8s.local\n</code></pre><p>These commands are more of an example to show how simple it is to create a cluster with <code>kops</code>, for the details<br>follow the official instructions. <code>kops</code> sets up the cluster and configures <code>kubectl</code> with credentials to access it.</p>\n<h2 id=\"Container-Registry\"><a href=\"#Container-Registry\" class=\"headerlink\" title=\"Container Registry\"></a>Container Registry</h2><p>As we are going to build an deploy containers, we need a container registry. If you already have one somewhere -<br>great. Setting up one on AWS is pretty straightforward - go to <code>EC2 Container Service</code> and create a registry. We need credentials for the build process to push images to it - create a IAM user with <code>AmazonEC2ContainerRegistryPowerUser</code> policy. Note its Access Key ID and Secret Key for later use.</p>\n<h2 id=\"The-project\"><a href=\"#The-project\" class=\"headerlink\" title=\"The project\"></a>The project</h2><p>We start with a project that already has a <code>Dockerfile</code>, but next to it we need two more files: <code>k8s-deployment.yml</code> to create a <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\" target=\"_blank\" rel=\"external\">kubernetes deployment</a>, and <code>k8s-service.yml</code> for the <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/\" target=\"_blank\" rel=\"external\">service</a>. </p>\n<p>A typical <code>k8s-deployment.yml</code>. It contains a few placeholders:</p>\n<pre><code>apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: myproject\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app:myproject\n    spec:\n      containers:\n      - name: myproject\n        image: %REGISTRY%/myproject:%VERSION%\n        ports:\n        - containerPort: 80\n</code></pre><p>and <code>k8s-service.yml</code>:</p>\n<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: myproject\nspec:\n  type: NodePort\n  ports:\n    - name: myproject\n      port: 80\n      targetPort: 80\n  selector:\n    app: myproject\n</code></pre><h2 id=\"CircleCI\"><a href=\"#CircleCI\" class=\"headerlink\" title=\"CircleCI\"></a>CircleCI</h2><p>There are  many choices for a CI server, and CircleCI is quite a good one.  They offer a free 1500 hours/month plan - this is 50 building hours a day, isn’t that insane? Go to <a href=\"https://circleci.com/\" target=\"_blank\" rel=\"external\">CircleCI</a> and create an account if you don’t have one already. Your project needs a file named <code>circleci.yml</code> that contains the build definition. An example of a Node project</p>\n<pre><code>machine:\n  node:\n    version: 6.11.2\n  services:\n    - docker\n  environment:\n    BUILD_TARGET_DIR: dist\n    APP_NAME: myproject\n\ndependencies:\n  cache_directories:\n    - node_modules\n    - code/server/node_modules\n    - code/client/node_modules\n    - code/client/vendor\n  override:\n    - npm install\n    - npm install -g bower gulp\n    - bower install\n    - gulp build\n\n\ndeployment:\n  prod:\n    branch: master\n    commands:\n      - cp docker/nginx/nginx.conf dist\n      - cp docker/nginx/Dockerfile dist\n      - wget https://raw.githubusercontent.com/kolov/k8s-stuff/master/circleci/deploy-aws.sh\n      - chmod +x deploy-aws.sh\n      - ./deploy-aws.sh\n</code></pre><p>After the regular build, this delegates to a script where the build of the meat is: <code>deploy-aws.sh</code>.</p>\n<h2 id=\"The-build-script\"><a href=\"#The-build-script\" class=\"headerlink\" title=\"The build script\"></a>The build script</h2><p>We are at the last piece of the puzzle. The script has to authenticate to both the container registry and the kubernetes cluster.<br>For the registry, define <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code>. that is enough to execute <code>aws ecr get-login</code>, which outputs a docker login command. Two other AWS parameters that are needed are <code>AWS_ACCOUNT_ID</code> and <code>AWS_DEFAULT_REGION</code>.</p>\n<p>For the kubernetes cluster, there must be a cleaner way, but I went brute force. On the local machine: <code>cat ~/.kube/config | base64</code> and store the output as <code>KUBECONFIGDATA</code> in circleci.</p>\n<p>With all this params, this is the script:</p>\n<pre><code>set +x\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nchmod +x kubectl\nmkdir ~/.kube\necho $KUBECONFIGDATA | base64 --decode --ignore-garbage &gt; ~/.kube/config\neval $(aws ecr get-login)\ndocker build --rm=false -t $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/$APP_NAME:$CIRCLE_SHA1 $BUILD_TARGET_DIR\nREGISTRY=$AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com\ndocker push $REGISTRY/$APP_NAME:$CIRCLE_SHA1\nsed -e s/%VERSION%/$CIRCLE_SHA1/g -e s/%APP_NAME%/$APP_NAME/g -e s/%REGISTRY%/$REGISTRY/g \\\nk8s-deployment.yml &gt; k8s-deployment-latest.yml\n./kubectl apply -f k8s-deployment-latest.yml\n./kubectl apply -f k8s-service.yml\n</code></pre>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj6gtn56h00011zstj18fy1ac","tag_id":"cj6gtn56p00021zstbqopr37o","_id":"cj6gtn56s00031zstxdfcccih"}],"Tag":[{"name":"aws, kubernetes, circleci, Continuous Delivery","_id":"cj6gtn56p00021zstbqopr37o"}]}}